#include<cp_debug.h>
 struct TreeNode {
      int val;
      TreeNode *left;
      TreeNode *right;
      TreeNode() : val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  };

int d = 0 ;

TreeNode* helper(const vector<int>& preorder, int st, int end){
    d++;
    if(d>5)
        return NULL;
    debug(st,end);
    if(st>=end || st<0)
        return NULL;
    TreeNode* root = new TreeNode(preorder[st]);
    
    int right_st = lower_bound(preorder.begin()+st+1, preorder.begin()+end, preorder[st]) - preorder.begin()  + st;
    debug(right_st);
    root->left = helper(preorder, st, right_st);
    root->right = helper(preorder, right_st, end);
    return root;
}

TreeNode* bstFromPreorder(const vector<int>& preorder) {
    return helper(preorder, 0, preorder.size());
}


int main(){
    vector<int> a = {8,5,1,10,12};
    for(int i=0;i<a.size(); ++i)
        cout<<"["<<i<<' '<<a[i]<<"] ";
   cout<<'\n';
    auto x = bstFromPreorder(a);
}
